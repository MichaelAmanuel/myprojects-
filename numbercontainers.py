# -*- coding: utf-8 -*-
"""NumberContainers

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19590nUeYrPa7so5J0zjWB7OKAA9eMkyU
"""

from sortedcontainers import SortedSet
import collections

class NumberContainers(object):

    def __init__(self):
        self.index_to_number = {}  # Maps index -> number
        self.number_to_indices = collections.defaultdict(SortedSet)  # Maps number -> sorted indices

    def change(self, index, number):

        if index in self.index_to_number:
            old_number = self.index_to_number[index]
            if old_number in self.number_to_indices:
                self.number_to_indices[old_number].discard(index)  # Remove the old mapping
                if not self.number_to_indices[old_number]:
                    del self.number_to_indices[old_number]  # Clean up empty sets

        self.index_to_number[index] = number  # Update the index mapping
        self.number_to_indices[number].add(index)  # Add to sorted set

    def find(self, number):
        """
        :type number: int
        :rtype: int
        """
        if number in self.number_to_indices and self.number_to_indices[number]:
            return self.number_to_indices[number][0]  # Get the smallest index
        return -1

