# -*- coding: utf-8 -*-
"""findMaxFish

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19590nUeYrPa7so5J0zjWB7OKAA9eMkyU
"""

class Solution(object):
    def findMaxFish(self, grid):
        rows, cols = len(grid), len(grid[0])
        visited = [[False] * cols for _ in range(rows)]

        def dfs(r, c):
            if r < 0 or r >= rows or c < 0 or c >= cols or visited[r][c] or grid[r][c] == 0:
                return 0
            visited[r][c] = True
            fish = grid[r][c]
            fish += dfs(r + 1, c)
            fish += dfs(r - 1, c)
            fish += dfs(r, c + 1)
            fish += dfs(r, c - 1)
            return fish

        max_fish = 0
        for r in range(rows):
            for c in range(cols):
                if grid[r][c] > 0 and not visited[r][c]:
                    max_fish = max(max_fish, dfs(r, c))

        return max_fish

s = "abaacbcbb"